#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>


//三个数从大到小输出
//int main()
//{
//	int a = 0; 
//	int b = 0;
//	int c = 0;
//	int tmp = 0;
//	printf("请输入三个数：");
//	scanf("%d%d%d",&a,&b,&c);
//	if (a < b)
//	{
//		tmp = a;
//		a = b;
//		b = tmp;
//	}
//	if (a < c)
//	{
//		tmp = a;
//		a = c;
//		c = tmp;
//	}
//	if (b < c)
//	{
//		tmp = b;
//		b = c;
//		c = tmp;
//	}
//	printf("从大到小为：%d%d%d\n",a,b,c);
//
//	return 0;
//}

//打印0-100被3整除
//int main()
//{
//	int i = 0;
//	for (i = 1; i <= 100; i++)
//	{
//		if (i % 3 == 0)
//			printf("%d",i);
//
//	}
//
//	return 0;
//}

//求两个数最大公约数——辗转相除法
//int main()
//{
//	int m = 0;
//	int n = 0;
//	int num = 0;
//	printf("请输入两个数：");
//	scanf("%d%d", &m, &n);
//	while (num=m%n)
//	{
//		m = n;
//		n = num;
//	}
//	printf("%d", n);
//
//	return 0;
//}

//打印1000-2000年的闰年
//int main()
//{
//	int year = 0;
//	int count = 0;
//	for (year = 1000; year <= 2000; year++)
//	{
//		//判断是否为闰年
//		//1.能被4整除，不能被100整除
//		//2.能被400整除
//		if ((year % 4 == 0 && year % 100 != 0 )||( year%400 == 0))
//		{
//			printf("%d是闰年    ",year);
//			count++;
//		}
//		/*else if(year%400 == 0)
//		{
//			printf("%d是闰年    ",year);
//			count++;
//		}*/
//	}
//	printf("count:%d",count);
//
//	return 0;
//}

//打印100-200的素数
// 方法1
//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 100; i <= 200; i++)
//	{
//		//判断i是否为素数
//		//素数判断的规则
//		//1.试除法
//		//素数：只能被1和自己整除
//		//产生2->i-1
//		int j = 0;
//		for (j = 2; j < i; j++)
//		{
//			if (i % j == 0)
//			{
//				break;
//			}
//		}
//		if (j == i)
//		{
//			count++;
//			printf("素数=%d  ",i);
//		}
//	}
//	printf("count:%d",count);
//	return 0;
//}

//方法2
//#include <math.h>//使用sqrt引用头文件
//int main()
//{
//	int i = 0;
//	int count = 0;
//	//sqrt - 开平方的数学库函数
//	for (i = 100; i <= 200; i++)
//	{
//		int j = 0;
//		for (j = 2; j <=sqrt(i); j++)
//		{
//			if (i % j == 0)
//			{
//				break;
//			}
//		}
//		if (j > sqrt(i))
//		{
//				count++;
//				printf("素数=%d  ",i);
//		}
//	}
//		printf("count:%d",count);
//
//	return 0;
//}


//方法3—素数不可能是偶数
//#include <math.h>//使用sqrt引用头文件
//int main()
//{
//	int i = 0;
//	int count = 0;
//	//sqrt - 开平方的数学库函数
//	for (i = 101; i <= 200; i+=2)
//	{
//		int j = 0;
//		for (j = 2; j <=sqrt(i); j++)
//		{
//			if (i % j == 0)
//			{
//				break;
//			}
//		}
//		if (j > sqrt(i))
//		{
//				count++;
//				printf("素数=%d  ",i);
//		}
//	}
//		printf("count:%d",count);
//
//	return 0;
//}
//<素数求解的n种境界>

//求1-100内9的个数
//int main()
//{
//	int i = 0;
//	int count = 0;
//	for (i = 1; i < 100; i++)
//	{
//		if (i % 10 == 9)
//			count++;
//		if (i / 10 == 9)
//			count++;
//	}
//	//9.29.39....99
//	//91.92.93...99
//	printf("count:%d",count);
//	return 0;
//}

//分数求和
//1/1-1/2+1/3-1/4...+1/99-1/100
//int main()
//{
//	int i = 0;
//	double sum = 0.0;
//	int flag = 1;
//	for (i = 1; i <= 100; i++)
//	{
//		sum += flag * 1.0 / i;
//		flag = -flag;//修改正负加减
//	}
//	printf("%lf\n",sum);
//}

//求10个数最大值
//int main()
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	int max = arr[0];//最大值
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	for (i = 1; i < sz; i++)
//	{
//		if (arr[i] > max)
//		{
//			max = arr[i];
//		}
//	}
//	printf("max = %d\n",max);
//
//	return 0;
//}

//在屏幕上输出9*9乘法口诀表
//int main()
//{
//	int i = 0;
//	int j = 0;
//	for (i = 1; i < 10; i++)
//	{
//		for (j = 1; j <= i; j++)
//		{
//			if (i < j)
//			{
//				printf("        ");
//			}
//			else
//			{
//				printf("%d*%d=%2d ",i,j,i*j);
//				
//			}
//		}
//		printf("\n");
//	}
//	return 0;
//}

//有序数组找一个数
//int main()
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int left = 0;
//	int right = sz - 1;
//	int k = 0;
//	printf("请输入查找的数：");
//	scanf("%d",&k);
//	while (left <= right)
//	{
//		int mid = (left + right) / 2;
//		if (arr[mid] > k)
//		{
//			right = mid - 1;
//		}
//		else if (arr[mid] < k)
//		{
//			left = mid + 1;
//		}
//		else
//		{
//			printf("找到了,下标是：%d", mid);
//			break;
//		}
//	}
//	if (left > right)
//	{
//		printf("没找到\n");
//	}
//
//	return 0;
//}


