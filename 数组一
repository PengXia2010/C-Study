#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>

//数组

//int main()
//{
//	//创建一个数组-存放整型10个
//	int arr[10] = {1,2,3};//不完全初始化，剩下元素默认初始化为0
//	char arr2[5] = {'a','b'};
//	char arr3[5] = "ab";//也是ok
//	char arr4[] = "abcdef";
//	printf("%d\n",sizeof(arr4));
//	//sizeof 计算arr4所占空间大小
//	//7个元素
//	printf("%d\n",strlen(arr4));
//	//strlen 求字符串长度，‘\0’,之前的字符个数
//	//6个元素
//
//	return 0;
//}

//1、strlen和sizeof的区别
//2.strlen试求字符串长度，只能针对字符串求长度
//3.sizeof计算变量，数组，类型的大小，单位是字节，操作符

//int main()
//{
//	char arr1[] = "abc";
//	char arr2[] = {'a','b','c'};
//	printf("%d\n",sizeof(arr1));//4
//	printf("%d\n",sizeof(arr2));//3
//	printf("%d\n",strlen(arr1));//3
//	printf("%d\n",strlen(arr2));//随机值
//
//	return 0;
//}


//int main()
//{
//	char arr[] = "abcdef";
//	printf("%c\n",arr[3]);
//	int i = 0;
//	int len = strlen(arr);
//	for (i = 0; i < len; i++)
//	{
//		printf("%c\n",arr[i]);
//	}
//
//	return 0;
//}


//int main()
//{
//	int arr[] = {1,2,3,4,5,6,7,8,9,10};
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	int i = 0;
//	for (i = 0; i < sz; i++)
//	{
//		printf("&arr[%d]=%p\n",i,&arr[i]);
//	}
//
//	return 0;
//}

//int main()
//{
//	int arr[3][4] = { { 1,2,3},{4,5} };//未完全初始化
//	int i = 0;
//	for (i = 0; i < 3; i++)
//	{
//		int j = 0;
//		for (j = 0; j < 4; j++)
//		{
//			printf("%d",arr[i][j]);
//			printf("&arr[%d][%d]=%p\n",i,j,&arr[i][j]);
//		}
//		//printf("\n");
//	}
//	return 0;
//}


//数组作为函数参数
void bubble_sort(int arr[],int sz)
{
	//int sz = sizeof(arr) / sizeof(arr[0]);
	int tmp = 0;
	int i = 0;
	for (i = 0; i < sz-1; i++)
	{
		//每一趟冒泡排序
		int j = 0;
		for (j = 0; j < sz-1-i; j++)
		{
			if (arr[j] > arr[j + 1])
			{
				tmp = arr[j];
				arr[j] = arr[j+1];
				arr[j + 1] = tmp;
			}
		}
	}
}

int main()
{
	int arr[] = {9,8,7,6,5,4,3,2,1};
	int i = 0;
	int sz = sizeof(arr) / sizeof(arr[0]);
	//对arr进行排序，升序
	//arr是数组，我们对数组arr传参，实际上传递过去的是数组arr首元素地址
	bubble_sort(arr,sz);
	for (i = 0; i < sz; i++)
	{
		printf("%d ",arr[i]);
	}
	return 0;
}
