#define _CRT_SECURE_NO_WARNINGS 1

#include <stdio.h>

//递归

//int main()
//{
//	printf("hehe\n");
//	main();
//
//
//	return 0;
//}


//按顺序打印一个数字
//void print(int n)
//{
//	if (n > 9)
//	{
//		print(n/10);
//	}
//	printf("%d ",n%10);
//}
//
//int main()
//{
//	unsigned int num = 0;
//	scanf("%d",&num);//1234
//	//递归
//	print(num);
//	return 0;
//}


//不允许创建临时变量，求字符串长度
//int my_strlen(char* str)
//{
//	int count = 0;//计数器
//	while (*str != '\0')
//	{
//		count++;
//		str++;
//	}
//	return count;
//}

//递归的方法
//int my_strlen(char* str)
//{
//	if (*str != '\0')
//	{
//		return 1 + my_strlen(str+1);
//	}
//	else
//	return 0;
//}
////大事化小
////my_strlen()
//int main()
//{
//	char arr[] = "bit";
//	/*int len = strlen(arr);创建临时变量
//	printf("%d\n",len);*/
//
//
//	int len = my_strlen(arr);//arr是数组，数组传参，传过去的不是整个数组，而是第一个元素地址
//	printf("%d\n",len);
//	return 0;
//}

//递归与迭代
//求n的阶乘

//int Fac1(int n)
//{
//	int i = 0;
//	int ret = 1;
//	for (i = 1; i <= n; i++)
//	{
//		ret *= i;
//		//ret = ret * i;
//		//1*1;1*1*2*3*4*5
//	}
//	return ret;
//}

//递归
//int Fac2(int n)
//{
//	if (n <= 1)
//		return 1;
//	else
//		return n * Fac2(n-1);
//}
//
//int main()
//{
//	int n = 0;
//	int ret = 0;
//	scanf("%d",&n);
//	//ret = Fac1(n);//循环的方式
//	ret = Fac2(n);
//	printf("%d\n",ret);
//	return 0;
//}

//斐波那契数列
//1 1 2 3 5 8 13 21 34 55 ....
int count = 0;
//int Fib1(int n)
//{
//	
//	if (n == 3)//测试第三个菲波那切数的计算次数
//	{
//		count++;
//	}
//	if (n <= 2)
//		return 1;
//	else
//		return Fib(n - 1) + Fib(n-2);
//}

int Fib2(int n)
{
	int a = 1;
	int b = 1;
	int c = 1;
	while (n > 2)
	{
		c = a + b;
		a = b;
		b = c;
		n--;

	}
	return c;
}

int main()
{
	int n = 0;
	int ret = 0;
	scanf("%d",&n);
	//TDD-测试驱动开发
	//ret = Fib1(n);
	ret = Fib2(n);
	printf("%d\n",ret);
	//printf("%d\n",count);
	return 0;
}

//思考：
//汉诺塔问题
//青蛙跳台阶问题
